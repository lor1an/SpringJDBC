<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd"
> 
    <jdbc:embedded-database id="myDB" type="HSQL">
        <jdbc:script location="classpath:SQLTemplate.sql"/>     
    </jdbc:embedded-database>
    
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="jdbc.properties" />
    
    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <property name="driverClass" value="${driver}" />
        <property name="jdbcUrl" value="${url}" />
        <property name="username" value="${user}"/>
        <property name="password" value="${password}"/>
        <property name="idleConnectionTestPeriodInMinutes" value="60"/>
        <property name="idleMaxAgeInMinutes" value="240"/>
        <property name="maxConnectionsPerPartition" value="30"/>
        <property name="minConnectionsPerPartition" value="10"/>
        <property name="partitionCount" value="3"/>
        <property name="acquireIncrement" value="5"/>
        <property name="statementsCacheSize" value="100"/>
        <property name="releaseHelperThreads" value="3"/>
    </bean>
    
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg type='javax.sql.DataSource' ref="dataSource"/>
    </bean>
    
    <bean id="genreDAO" class="com.epam.repository.genre.GenreRepository">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean id="authorDAO" class="com.epam.repository.author.AuthorRepository">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>
   
    <bean id="bookDAO" class="com.epam.repository.book.BookRepository">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>
    
    <bean id="bookService" class="com.epam.service.BookService">
        <constructor-arg type='com.epam.repository.author.AuthorRepository' ref="authorDAO"/>
        <constructor-arg type='com.epam.repository.book.BookRepository' ref="bookDAO"/>
        <constructor-arg type='com.epam.repository.genre.GenreRepository' ref="genreDAO"/>
    </bean>
    
    
</beans>